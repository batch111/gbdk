                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _update_hero_sprite
                                     13 	.globl _update_enemy_sprite
                                     14 	.globl _set_sprite_data
                                     15 	.globl _joypad
                                     16 	.globl _delay
                                     17 	.globl _heroSpriteIndex
                                     18 	.globl _hero_y
                                     19 	.globl _hero_x
                                     20 	.globl _enemyAnimationCounter
                                     21 	.globl _enemySpeed
                                     22 	.globl _enemySpriteIndex
                                     23 	.globl _enemy_y
                                     24 	.globl _enemy_x
                                     25 	.globl _enemy2
                                     26 	.globl _enemy
                                     27 	.globl _hero2
                                     28 	.globl _hero
                                     29 ;--------------------------------------------------------
                                     30 ; special function registers
                                     31 ;--------------------------------------------------------
                                     32 ;--------------------------------------------------------
                                     33 ; ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _DATA
                                     36 ;--------------------------------------------------------
                                     37 ; ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area _INITIALIZED
    00000000                         40 _hero::
    00000000                         41 	.ds 64
    00000040                         42 _hero2::
    00000040                         43 	.ds 64
    00000080                         44 _enemy::
    00000080                         45 	.ds 64
    000000C0                         46 _enemy2::
    000000C0                         47 	.ds 64
    00000100                         48 _enemy_x::
    00000100                         49 	.ds 1
    00000101                         50 _enemy_y::
    00000101                         51 	.ds 1
    00000102                         52 _enemySpriteIndex::
    00000102                         53 	.ds 1
    00000103                         54 _enemySpeed::
    00000103                         55 	.ds 1
    00000104                         56 _enemyAnimationCounter::
    00000104                         57 	.ds 1
    00000105                         58 _hero_x::
    00000105                         59 	.ds 1
    00000106                         60 _hero_y::
    00000106                         61 	.ds 1
    00000107                         62 _heroSpriteIndex::
    00000107                         63 	.ds 1
                                     64 ;--------------------------------------------------------
                                     65 ; absolute external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area _DABS (ABS)
                                     68 ;--------------------------------------------------------
                                     69 ; global & static initialisations
                                     70 ;--------------------------------------------------------
                                     71 	.area _HOME
                                     72 	.area _GSINIT
                                     73 	.area _GSFINAL
                                     74 	.area _GSINIT
                                     75 ;--------------------------------------------------------
                                     76 ; Home
                                     77 ;--------------------------------------------------------
                                     78 	.area _HOME
                                     79 	.area _HOME
                                     80 ;--------------------------------------------------------
                                     81 ; code
                                     82 ;--------------------------------------------------------
                                     83 	.area _CODE
                                     84 ;main.c:20: void update_enemy_sprite() {
                                     85 ;	---------------------------------
                                     86 ; Function update_enemy_sprite
                                     87 ; ---------------------------------
    00000000                         88 _update_enemy_sprite::
                                     89 ;main.c:22: int move_x = 0;
                                     90 ;main.c:23: int move_y = 0;
    00000000 01 00 00         [12]   91 	ld	bc, #0x0
                                     92 ;main.c:26: if (enemy_x < hero_x) {
    00000003 FAr00r01         [16]   93 	ld	a, (#_enemy_x)
    00000006 21r05r01         [12]   94 	ld	hl, #_hero_x
    00000009 96               [ 8]   95 	sub	a, (hl)
    0000000A 30 04            [12]   96 	jr	NC, 00104$
                                     97 ;main.c:27: move_x = 1;  // Aller vers la droite
    0000000C 0E 01            [ 8]   98 	ld	c, #0x01
    0000000E 18 0B            [12]   99 	jr	00105$
    00000010                        100 00104$:
                                    101 ;main.c:28: } else if (enemy_x > hero_x) {
    00000010 FAr05r01         [16]  102 	ld	a, (#_hero_x)
    00000013 21r00r01         [12]  103 	ld	hl, #_enemy_x
    00000016 96               [ 8]  104 	sub	a, (hl)
    00000017 30 02            [12]  105 	jr	NC, 00105$
                                    106 ;main.c:29: move_x = -1; // Aller vers la gauche
    00000019 0E FF            [ 8]  107 	ld	c, #0xff
    0000001B                        108 00105$:
                                    109 ;main.c:32: if (enemy_y < hero_y) {
    0000001B FAr01r01         [16]  110 	ld	a, (#_enemy_y)
    0000001E 21r06r01         [12]  111 	ld	hl, #_hero_y
    00000021 96               [ 8]  112 	sub	a, (hl)
    00000022 30 04            [12]  113 	jr	NC, 00109$
                                    114 ;main.c:33: move_y = 1;  // Aller vers le bas
    00000024 06 01            [ 8]  115 	ld	b, #0x01
    00000026 18 0B            [12]  116 	jr	00110$
    00000028                        117 00109$:
                                    118 ;main.c:34: } else if (enemy_y > hero_y) {
    00000028 FAr06r01         [16]  119 	ld	a, (#_hero_y)
    0000002B 21r01r01         [12]  120 	ld	hl, #_enemy_y
    0000002E 96               [ 8]  121 	sub	a, (hl)
    0000002F 30 02            [12]  122 	jr	NC, 00110$
                                    123 ;main.c:35: move_y = -1; // Aller vers le haut
    00000031 06 FF            [ 8]  124 	ld	b, #0xff
    00000033                        125 00110$:
                                    126 ;main.c:39: enemy_x += move_x * 5 * enemySpeed;
    00000033 79               [ 4]  127 	ld	a, c
    00000034 87               [ 4]  128 	add	a, a
    00000035 87               [ 4]  129 	add	a, a
    00000036 81               [ 4]  130 	add	a, c
    00000037 4F               [ 4]  131 	ld	c, a
    00000038 C5               [16]  132 	push	bc
    00000039 21r03r01         [12]  133 	ld	hl, #_enemySpeed
    0000003C 5E               [ 8]  134 	ld	e, (hl)
    0000003D 79               [ 4]  135 	ld	a, c
    0000003E CDr00r00         [24]  136 	call	__muluschar
    00000041 79               [ 4]  137 	ld	a, c
    00000042 C1               [12]  138 	pop	bc
    00000043 21r00r01         [12]  139 	ld	hl, #_enemy_x
    00000046 4E               [ 8]  140 	ld	c, (hl)
    00000047 81               [ 4]  141 	add	a, c
    00000048 77               [ 8]  142 	ld	(hl), a
                                    143 ;main.c:40: enemy_y += move_y * 5 * enemySpeed;
    00000049 78               [ 4]  144 	ld	a, b
    0000004A 4F               [ 4]  145 	ld	c, a
    0000004B 87               [ 4]  146 	add	a, a
    0000004C 87               [ 4]  147 	add	a, a
    0000004D 81               [ 4]  148 	add	a, c
    0000004E 4F               [ 4]  149 	ld	c, a
    0000004F 21r03r01         [12]  150 	ld	hl, #_enemySpeed
    00000052 5E               [ 8]  151 	ld	e, (hl)
    00000053 79               [ 4]  152 	ld	a, c
    00000054 CDr00r00         [24]  153 	call	__muluschar
    00000057 21r01r01         [12]  154 	ld	hl, #_enemy_y
    0000005A 7E               [ 8]  155 	ld	a, (hl)
    0000005B 81               [ 4]  156 	add	a, c
    0000005C 77               [ 8]  157 	ld	(hl), a
                                    158 ;main.c:43: if (enemy_x > 150) enemy_x = 150;
    0000005D 3E 96            [ 8]  159 	ld	a, #0x96
    0000005F 21r00r01         [12]  160 	ld	hl, #_enemy_x
    00000062 96               [ 8]  161 	sub	a, (hl)
    00000063 30 02            [12]  162 	jr	NC, 00112$
    00000065 36 96            [12]  163 	ld	(hl), #0x96
    00000067                        164 00112$:
                                    165 ;main.c:44: if (enemy_x < 10) enemy_x = 10;
    00000067 21r00r01         [12]  166 	ld	hl, #_enemy_x
    0000006A 7E               [ 8]  167 	ld	a, (hl)
    0000006B D6 0A            [ 8]  168 	sub	a, #0x0a
    0000006D 30 02            [12]  169 	jr	NC, 00114$
    0000006F 36 0A            [12]  170 	ld	(hl), #0x0a
    00000071                        171 00114$:
                                    172 ;main.c:45: if (enemy_y > 140) enemy_y = 140;
    00000071 3E 8C            [ 8]  173 	ld	a, #0x8c
    00000073 21r01r01         [12]  174 	ld	hl, #_enemy_y
    00000076 96               [ 8]  175 	sub	a, (hl)
    00000077 30 02            [12]  176 	jr	NC, 00116$
    00000079 36 8C            [12]  177 	ld	(hl), #0x8c
    0000007B                        178 00116$:
                                    179 ;main.c:46: if (enemy_y < 10) enemy_y = 10;
    0000007B 21r01r01         [12]  180 	ld	hl, #_enemy_y
    0000007E 7E               [ 8]  181 	ld	a, (hl)
    0000007F D6 0A            [ 8]  182 	sub	a, #0x0a
    00000081 30 02            [12]  183 	jr	NC, 00118$
    00000083 36 0A            [12]  184 	ld	(hl), #0x0a
    00000085                        185 00118$:
                                    186 ;main.c:49: move_sprite(4, enemy_x, enemy_y); // Sprite 4 (en haut à gauche de l'ennemi)
    00000085 21r01r01         [12]  187 	ld	hl, #_enemy_y
    00000088 46               [ 8]  188 	ld	b, (hl)
    00000089 21r00r01         [12]  189 	ld	hl, #_enemy_x
    0000008C 4E               [ 8]  190 	ld	c, (hl)
                                    191 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    0000008D 21r10r00         [12]  192 	ld	hl, #(_shadow_OAM + 16)
                                    193 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    00000090 78               [ 4]  194 	ld	a, b
    00000091 22               [ 8]  195 	ld	(hl+), a
    00000092 71               [ 8]  196 	ld	(hl), c
                                    197 ;main.c:50: move_sprite(5, enemy_x + 8, enemy_y); // Sprite 5 (en haut à droite)
    00000093 21r01r01         [12]  198 	ld	hl, #_enemy_y
    00000096 46               [ 8]  199 	ld	b, (hl)
    00000097 FAr00r01         [16]  200 	ld	a, (#_enemy_x)
    0000009A C6 08            [ 8]  201 	add	a, #0x08
    0000009C 4F               [ 4]  202 	ld	c, a
                                    203 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    0000009D 21r14r00         [12]  204 	ld	hl, #(_shadow_OAM + 20)
                                    205 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    000000A0 78               [ 4]  206 	ld	a, b
    000000A1 22               [ 8]  207 	ld	(hl+), a
    000000A2 71               [ 8]  208 	ld	(hl), c
                                    209 ;main.c:51: move_sprite(6, enemy_x, enemy_y + 8); // Sprite 6 (en bas à gauche)
    000000A3 FAr01r01         [16]  210 	ld	a, (#_enemy_y)
    000000A6 C6 08            [ 8]  211 	add	a, #0x08
    000000A8 47               [ 4]  212 	ld	b, a
    000000A9 21r00r01         [12]  213 	ld	hl, #_enemy_x
    000000AC 4E               [ 8]  214 	ld	c, (hl)
                                    215 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    000000AD 21r18r00         [12]  216 	ld	hl, #(_shadow_OAM + 24)
                                    217 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    000000B0 78               [ 4]  218 	ld	a, b
    000000B1 22               [ 8]  219 	ld	(hl+), a
    000000B2 71               [ 8]  220 	ld	(hl), c
                                    221 ;main.c:52: move_sprite(7, enemy_x + 8, enemy_y + 8); // Sprite 7 (en bas à droite)
    000000B3 FAr01r01         [16]  222 	ld	a, (#_enemy_y)
    000000B6 C6 08            [ 8]  223 	add	a, #0x08
    000000B8 47               [ 4]  224 	ld	b, a
    000000B9 FAr00r01         [16]  225 	ld	a, (#_enemy_x)
    000000BC C6 08            [ 8]  226 	add	a, #0x08
    000000BE 4F               [ 4]  227 	ld	c, a
                                    228 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    000000BF 21r1Cr00         [12]  229 	ld	hl, #(_shadow_OAM + 28)
                                    230 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    000000C2 78               [ 4]  231 	ld	a, b
    000000C3 22               [ 8]  232 	ld	(hl+), a
    000000C4 71               [ 8]  233 	ld	(hl), c
                                    234 ;main.c:55: enemyAnimationCounter++;  // Incrémenter le compteur d'animation
    000000C5 21r04r01         [12]  235 	ld	hl, #_enemyAnimationCounter
    000000C8 34               [12]  236 	inc	(hl)
                                    237 ;main.c:58: if (enemyAnimationCounter > 1) {
    000000C9 3E 01            [ 8]  238 	ld	a, #0x01
    000000CB 96               [ 8]  239 	sub	a, (hl)
    000000CC D0               [20]  240 	ret	NC
                                    241 ;main.c:59: if (enemySpriteIndex == 0) {
    000000CD FAr02r01         [16]  242 	ld	a, (#_enemySpriteIndex)
    000000D0 B7               [ 4]  243 	or	a, a
    000000D1 20 1B            [12]  244 	jr	NZ, 00120$
                                    245 ;c:\gbdk\include\gb\gb.h:1875: shadow_OAM[nb].tile=tile;
    000000D3 21r12r00         [12]  246 	ld	hl, #(_shadow_OAM + 18)
    000000D6 36 08            [12]  247 	ld	(hl), #0x08
    000000D8 21r16r00         [12]  248 	ld	hl, #(_shadow_OAM + 22)
    000000DB 36 09            [12]  249 	ld	(hl), #0x09
    000000DD 21r1Ar00         [12]  250 	ld	hl, #(_shadow_OAM + 26)
    000000E0 36 0A            [12]  251 	ld	(hl), #0x0a
    000000E2 21r1Er00         [12]  252 	ld	hl, #(_shadow_OAM + 30)
    000000E5 36 0B            [12]  253 	ld	(hl), #0x0b
                                    254 ;main.c:64: enemySpriteIndex = 1;
    000000E7 21r02r01         [12]  255 	ld	hl, #_enemySpriteIndex
    000000EA 36 01            [12]  256 	ld	(hl), #0x01
    000000EC 18 19            [12]  257 	jr	00121$
    000000EE                        258 00120$:
                                    259 ;c:\gbdk\include\gb\gb.h:1875: shadow_OAM[nb].tile=tile;
    000000EE 21r12r00         [12]  260 	ld	hl, #(_shadow_OAM + 18)
    000000F1 36 0C            [12]  261 	ld	(hl), #0x0c
    000000F3 21r16r00         [12]  262 	ld	hl, #(_shadow_OAM + 22)
    000000F6 36 0D            [12]  263 	ld	(hl), #0x0d
    000000F8 21r1Ar00         [12]  264 	ld	hl, #(_shadow_OAM + 26)
    000000FB 36 0E            [12]  265 	ld	(hl), #0x0e
    000000FD 21r1Er00         [12]  266 	ld	hl, #(_shadow_OAM + 30)
    00000100 36 0F            [12]  267 	ld	(hl), #0x0f
                                    268 ;main.c:70: enemySpriteIndex = 0;
    00000102 21r02r01         [12]  269 	ld	hl, #_enemySpriteIndex
    00000105 36 00            [12]  270 	ld	(hl), #0x00
    00000107                        271 00121$:
                                    272 ;main.c:72: enemyAnimationCounter = 0; // Réinitialiser le compteur
    00000107 21r04r01         [12]  273 	ld	hl, #_enemyAnimationCounter
    0000010A 36 00            [12]  274 	ld	(hl), #0x00
                                    275 ;main.c:74: }
    0000010C C9               [16]  276 	ret
                                    277 ;main.c:77: void update_hero_sprite() {
                                    278 ;	---------------------------------
                                    279 ; Function update_hero_sprite
                                    280 ; ---------------------------------
    0000010D                        281 _update_hero_sprite::
                                    282 ;main.c:79: UINT8 move_x = 0;
                                    283 ;main.c:80: UINT8 move_y = 0;
    0000010D 01 00 00         [12]  284 	ld	bc, #0x0
                                    285 ;main.c:83: if (joypad() & J_LEFT) {
    00000110 CDr00r00         [24]  286 	call	_joypad
    00000113 CB 4F            [ 8]  287 	bit	1, a
    00000115 28 02            [12]  288 	jr	Z, 00102$
                                    289 ;main.c:84: move_x = -8;
    00000117 06 F8            [ 8]  290 	ld	b, #0xf8
    00000119                        291 00102$:
                                    292 ;main.c:86: if (joypad() & J_RIGHT) {
    00000119 CDr00r00         [24]  293 	call	_joypad
    0000011C 0F               [ 4]  294 	rrca
    0000011D 30 02            [12]  295 	jr	NC, 00104$
                                    296 ;main.c:87: move_x = 8;
    0000011F 06 08            [ 8]  297 	ld	b, #0x08
    00000121                        298 00104$:
                                    299 ;main.c:89: if (joypad() & J_UP) {
    00000121 CDr00r00         [24]  300 	call	_joypad
    00000124 CB 57            [ 8]  301 	bit	2, a
    00000126 28 02            [12]  302 	jr	Z, 00106$
                                    303 ;main.c:90: move_y = -8;
    00000128 0E F8            [ 8]  304 	ld	c, #0xf8
    0000012A                        305 00106$:
                                    306 ;main.c:92: if (joypad() & J_DOWN) {
    0000012A CDr00r00         [24]  307 	call	_joypad
    0000012D CB 5F            [ 8]  308 	bit	3, a
    0000012F 28 02            [12]  309 	jr	Z, 00108$
                                    310 ;main.c:93: move_y = 8;
    00000131 0E 08            [ 8]  311 	ld	c, #0x08
    00000133                        312 00108$:
                                    313 ;main.c:97: hero_x += move_x;
    00000133 21r05r01         [12]  314 	ld	hl, #_hero_x
    00000136 7E               [ 8]  315 	ld	a, (hl)
    00000137 80               [ 4]  316 	add	a, b
    00000138 77               [ 8]  317 	ld	(hl), a
                                    318 ;main.c:98: hero_y += move_y;
    00000139 21r06r01         [12]  319 	ld	hl, #_hero_y
    0000013C 7E               [ 8]  320 	ld	a, (hl)
    0000013D 81               [ 4]  321 	add	a, c
    0000013E 77               [ 8]  322 	ld	(hl), a
                                    323 ;main.c:101: if (hero_x > 152) hero_x = 154; // Pour éviter de sortir à droite
    0000013F 3E 98            [ 8]  324 	ld	a, #0x98
    00000141 21r05r01         [12]  325 	ld	hl, #_hero_x
    00000144 96               [ 8]  326 	sub	a, (hl)
    00000145 30 02            [12]  327 	jr	NC, 00110$
    00000147 36 9A            [12]  328 	ld	(hl), #0x9a
    00000149                        329 00110$:
                                    330 ;main.c:102: if (hero_x < 10) hero_x = 8;     // Pour éviter de sortir à gauche
    00000149 21r05r01         [12]  331 	ld	hl, #_hero_x
    0000014C 7E               [ 8]  332 	ld	a, (hl)
    0000014D D6 0A            [ 8]  333 	sub	a, #0x0a
    0000014F 30 02            [12]  334 	jr	NC, 00112$
    00000151 36 08            [12]  335 	ld	(hl), #0x08
    00000153                        336 00112$:
                                    337 ;main.c:103: if (hero_y > 144) hero_y = 144; // Pour éviter de sortir en bas
    00000153 3E 90            [ 8]  338 	ld	a, #0x90
    00000155 21r06r01         [12]  339 	ld	hl, #_hero_y
    00000158 96               [ 8]  340 	sub	a, (hl)
    00000159 30 02            [12]  341 	jr	NC, 00114$
    0000015B 36 90            [12]  342 	ld	(hl), #0x90
    0000015D                        343 00114$:
                                    344 ;main.c:104: if (hero_y < 16) hero_y = 16;     // Pour éviter de sortir en haut
    0000015D 21r06r01         [12]  345 	ld	hl, #_hero_y
    00000160 7E               [ 8]  346 	ld	a, (hl)
    00000161 D6 10            [ 8]  347 	sub	a, #0x10
    00000163 30 02            [12]  348 	jr	NC, 00116$
    00000165 36 10            [12]  349 	ld	(hl), #0x10
    00000167                        350 00116$:
                                    351 ;main.c:107: move_sprite(0, hero_x, hero_y); // Sprite 0 (en haut à gauche)
    00000167 21r06r01         [12]  352 	ld	hl, #_hero_y
    0000016A 46               [ 8]  353 	ld	b, (hl)
    0000016B 21r05r01         [12]  354 	ld	hl, #_hero_x
    0000016E 4E               [ 8]  355 	ld	c, (hl)
                                    356 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    0000016F 21r00r00         [12]  357 	ld	hl, #_shadow_OAM
                                    358 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    00000172 78               [ 4]  359 	ld	a, b
    00000173 22               [ 8]  360 	ld	(hl+), a
    00000174 71               [ 8]  361 	ld	(hl), c
                                    362 ;main.c:108: move_sprite(1, hero_x + 8, hero_y); // Sprite 1 (en haut à droite)
    00000175 21r06r01         [12]  363 	ld	hl, #_hero_y
    00000178 46               [ 8]  364 	ld	b, (hl)
    00000179 FAr05r01         [16]  365 	ld	a, (#_hero_x)
    0000017C C6 08            [ 8]  366 	add	a, #0x08
    0000017E 4F               [ 4]  367 	ld	c, a
                                    368 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    0000017F 21r04r00         [12]  369 	ld	hl, #(_shadow_OAM + 4)
                                    370 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    00000182 78               [ 4]  371 	ld	a, b
    00000183 22               [ 8]  372 	ld	(hl+), a
    00000184 71               [ 8]  373 	ld	(hl), c
                                    374 ;main.c:109: move_sprite(2, hero_x, hero_y + 8); // Sprite 2 (en bas à gauche)
    00000185 FAr06r01         [16]  375 	ld	a, (#_hero_y)
    00000188 C6 08            [ 8]  376 	add	a, #0x08
    0000018A 47               [ 4]  377 	ld	b, a
    0000018B 21r05r01         [12]  378 	ld	hl, #_hero_x
    0000018E 4E               [ 8]  379 	ld	c, (hl)
                                    380 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    0000018F 21r08r00         [12]  381 	ld	hl, #(_shadow_OAM + 8)
                                    382 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    00000192 78               [ 4]  383 	ld	a, b
    00000193 22               [ 8]  384 	ld	(hl+), a
    00000194 71               [ 8]  385 	ld	(hl), c
                                    386 ;main.c:110: move_sprite(3, hero_x + 8, hero_y + 8); // Sprite 3 (en bas à droite)
    00000195 FAr06r01         [16]  387 	ld	a, (#_hero_y)
    00000198 C6 08            [ 8]  388 	add	a, #0x08
    0000019A 47               [ 4]  389 	ld	b, a
    0000019B FAr05r01         [16]  390 	ld	a, (#_hero_x)
    0000019E C6 08            [ 8]  391 	add	a, #0x08
    000001A0 4F               [ 4]  392 	ld	c, a
                                    393 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    000001A1 21r0Cr00         [12]  394 	ld	hl, #(_shadow_OAM + 12)
                                    395 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    000001A4 78               [ 4]  396 	ld	a, b
    000001A5 22               [ 8]  397 	ld	(hl+), a
    000001A6 71               [ 8]  398 	ld	(hl), c
                                    399 ;main.c:113: if (heroSpriteIndex == 0) {
    000001A7 FAr07r01         [16]  400 	ld	a, (#_heroSpriteIndex)
    000001AA B7               [ 4]  401 	or	a, a
    000001AB 20 1A            [12]  402 	jr	NZ, 00118$
                                    403 ;c:\gbdk\include\gb\gb.h:1875: shadow_OAM[nb].tile=tile;
    000001AD 21r02r00         [12]  404 	ld	hl, #(_shadow_OAM + 2)
    000001B0 36 00            [12]  405 	ld	(hl), #0x00
    000001B2 21r06r00         [12]  406 	ld	hl, #(_shadow_OAM + 6)
    000001B5 36 01            [12]  407 	ld	(hl), #0x01
    000001B7 21r0Ar00         [12]  408 	ld	hl, #(_shadow_OAM + 10)
    000001BA 36 02            [12]  409 	ld	(hl), #0x02
    000001BC 21r0Er00         [12]  410 	ld	hl, #(_shadow_OAM + 14)
    000001BF 36 03            [12]  411 	ld	(hl), #0x03
                                    412 ;main.c:118: heroSpriteIndex = 1;
    000001C1 21r07r01         [12]  413 	ld	hl, #_heroSpriteIndex
    000001C4 36 01            [12]  414 	ld	(hl), #0x01
    000001C6 C9               [16]  415 	ret
    000001C7                        416 00118$:
                                    417 ;c:\gbdk\include\gb\gb.h:1875: shadow_OAM[nb].tile=tile;
    000001C7 21r02r00         [12]  418 	ld	hl, #(_shadow_OAM + 2)
    000001CA 36 04            [12]  419 	ld	(hl), #0x04
    000001CC 21r06r00         [12]  420 	ld	hl, #(_shadow_OAM + 6)
    000001CF 36 05            [12]  421 	ld	(hl), #0x05
    000001D1 21r0Ar00         [12]  422 	ld	hl, #(_shadow_OAM + 10)
    000001D4 36 06            [12]  423 	ld	(hl), #0x06
    000001D6 21r0Er00         [12]  424 	ld	hl, #(_shadow_OAM + 14)
    000001D9 36 07            [12]  425 	ld	(hl), #0x07
                                    426 ;main.c:124: heroSpriteIndex = 0;
    000001DB 21r07r01         [12]  427 	ld	hl, #_heroSpriteIndex
    000001DE 36 00            [12]  428 	ld	(hl), #0x00
                                    429 ;main.c:126: }
    000001E0 C9               [16]  430 	ret
                                    431 ;main.c:128: void main(void) {
                                    432 ;	---------------------------------
                                    433 ; Function main
                                    434 ; ---------------------------------
    000001E1                        435 _main::
                                    436 ;main.c:130: set_sprite_data(0, 8, hero);  // 8 tuiles pour le premier personnage
    000001E1 11r00r00         [12]  437 	ld	de, #_hero
    000001E4 D5               [16]  438 	push	de
    000001E5 21 00 08         [12]  439 	ld	hl, #0x800
    000001E8 E5               [16]  440 	push	hl
    000001E9 CDr00r00         [24]  441 	call	_set_sprite_data
    000001EC E8 04            [16]  442 	add	sp, #4
                                    443 ;main.c:131: set_sprite_data(8, 8, enemy);  // 8 tuiles pour le second personnage
    000001EE 11r80r00         [12]  444 	ld	de, #_enemy
    000001F1 D5               [16]  445 	push	de
    000001F2 3E 08            [ 8]  446 	ld	a, #0x08
    000001F4 F5               [16]  447 	push	af
    000001F5 33               [ 8]  448 	inc	sp
    000001F6 3E 08            [ 8]  449 	ld	a, #0x08
    000001F8 F5               [16]  450 	push	af
    000001F9 33               [ 8]  451 	inc	sp
    000001FA CDr00r00         [24]  452 	call	_set_sprite_data
    000001FD E8 04            [16]  453 	add	sp, #4
                                    454 ;c:\gbdk\include\gb\gb.h:1875: shadow_OAM[nb].tile=tile;
    000001FF 21r12r00         [12]  455 	ld	hl, #(_shadow_OAM + 18)
    00000202 36 08            [12]  456 	ld	(hl), #0x08
    00000204 21r16r00         [12]  457 	ld	hl, #(_shadow_OAM + 22)
    00000207 36 09            [12]  458 	ld	(hl), #0x09
    00000209 21r1Ar00         [12]  459 	ld	hl, #(_shadow_OAM + 26)
    0000020C 36 0A            [12]  460 	ld	(hl), #0x0a
    0000020E 21r1Er00         [12]  461 	ld	hl, #(_shadow_OAM + 30)
    00000211 36 0B            [12]  462 	ld	(hl), #0x0b
                                    463 ;main.c:140: move_sprite(4, enemy_x, enemy_y); // Sprite 4 (en haut à gauche de l'ennemi)
    00000213 21r01r01         [12]  464 	ld	hl, #_enemy_y
    00000216 46               [ 8]  465 	ld	b, (hl)
    00000217 21r00r01         [12]  466 	ld	hl, #_enemy_x
    0000021A 4E               [ 8]  467 	ld	c, (hl)
                                    468 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    0000021B 21r10r00         [12]  469 	ld	hl, #(_shadow_OAM + 16)
                                    470 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    0000021E 78               [ 4]  471 	ld	a, b
    0000021F 22               [ 8]  472 	ld	(hl+), a
    00000220 71               [ 8]  473 	ld	(hl), c
                                    474 ;main.c:141: move_sprite(5, enemy_x + 8, enemy_y); // Sprite 5 (en haut à droite)
    00000221 21r01r01         [12]  475 	ld	hl, #_enemy_y
    00000224 46               [ 8]  476 	ld	b, (hl)
    00000225 FAr00r01         [16]  477 	ld	a, (#_enemy_x)
    00000228 C6 08            [ 8]  478 	add	a, #0x08
    0000022A 4F               [ 4]  479 	ld	c, a
                                    480 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    0000022B 21r14r00         [12]  481 	ld	hl, #(_shadow_OAM + 20)
                                    482 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    0000022E 78               [ 4]  483 	ld	a, b
    0000022F 22               [ 8]  484 	ld	(hl+), a
    00000230 71               [ 8]  485 	ld	(hl), c
                                    486 ;main.c:142: move_sprite(6, enemy_x, enemy_y + 8); // Sprite 6 (en bas à gauche)
    00000231 FAr01r01         [16]  487 	ld	a, (#_enemy_y)
    00000234 C6 08            [ 8]  488 	add	a, #0x08
    00000236 47               [ 4]  489 	ld	b, a
    00000237 21r00r01         [12]  490 	ld	hl, #_enemy_x
    0000023A 4E               [ 8]  491 	ld	c, (hl)
                                    492 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    0000023B 21r18r00         [12]  493 	ld	hl, #(_shadow_OAM + 24)
                                    494 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    0000023E 78               [ 4]  495 	ld	a, b
    0000023F 22               [ 8]  496 	ld	(hl+), a
    00000240 71               [ 8]  497 	ld	(hl), c
                                    498 ;main.c:143: move_sprite(7, enemy_x + 8, enemy_y + 8); // Sprite 7 (en bas à droite)
    00000241 FAr01r01         [16]  499 	ld	a, (#_enemy_y)
    00000244 C6 08            [ 8]  500 	add	a, #0x08
    00000246 47               [ 4]  501 	ld	b, a
    00000247 FAr00r01         [16]  502 	ld	a, (#_enemy_x)
    0000024A C6 08            [ 8]  503 	add	a, #0x08
    0000024C 4F               [ 4]  504 	ld	c, a
                                    505 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    0000024D 21r1Cr00         [12]  506 	ld	hl, #(_shadow_OAM + 28)
                                    507 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    00000250 78               [ 4]  508 	ld	a, b
    00000251 22               [ 8]  509 	ld	(hl+), a
    00000252 71               [ 8]  510 	ld	(hl), c
                                    511 ;main.c:146: move_sprite(0, hero_x, hero_y); // Sprite 0 (en haut à gauche)
    00000253 21r06r01         [12]  512 	ld	hl, #_hero_y
    00000256 46               [ 8]  513 	ld	b, (hl)
    00000257 21r05r01         [12]  514 	ld	hl, #_hero_x
    0000025A 4E               [ 8]  515 	ld	c, (hl)
                                    516 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    0000025B 21r00r00         [12]  517 	ld	hl, #_shadow_OAM
                                    518 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    0000025E 78               [ 4]  519 	ld	a, b
    0000025F 22               [ 8]  520 	ld	(hl+), a
    00000260 71               [ 8]  521 	ld	(hl), c
                                    522 ;main.c:147: move_sprite(1, hero_x + 8, hero_y); // Sprite 1 (en haut à droite)
    00000261 21r06r01         [12]  523 	ld	hl, #_hero_y
    00000264 46               [ 8]  524 	ld	b, (hl)
    00000265 FAr05r01         [16]  525 	ld	a, (#_hero_x)
    00000268 C6 08            [ 8]  526 	add	a, #0x08
    0000026A 4F               [ 4]  527 	ld	c, a
                                    528 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    0000026B 21r04r00         [12]  529 	ld	hl, #(_shadow_OAM + 4)
                                    530 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    0000026E 78               [ 4]  531 	ld	a, b
    0000026F 22               [ 8]  532 	ld	(hl+), a
    00000270 71               [ 8]  533 	ld	(hl), c
                                    534 ;main.c:148: move_sprite(2, hero_x, hero_y + 8); // Sprite 2 (en bas à gauche)
    00000271 FAr06r01         [16]  535 	ld	a, (#_hero_y)
    00000274 C6 08            [ 8]  536 	add	a, #0x08
    00000276 47               [ 4]  537 	ld	b, a
    00000277 21r05r01         [12]  538 	ld	hl, #_hero_x
    0000027A 4E               [ 8]  539 	ld	c, (hl)
                                    540 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    0000027B 21r08r00         [12]  541 	ld	hl, #(_shadow_OAM + 8)
                                    542 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    0000027E 78               [ 4]  543 	ld	a, b
    0000027F 22               [ 8]  544 	ld	(hl+), a
    00000280 71               [ 8]  545 	ld	(hl), c
                                    546 ;main.c:149: move_sprite(3, hero_x + 8, hero_y + 8); // Sprite 3 (en bas à droite)
    00000281 FAr06r01         [16]  547 	ld	a, (#_hero_y)
    00000284 C6 08            [ 8]  548 	add	a, #0x08
    00000286 47               [ 4]  549 	ld	b, a
    00000287 FAr05r01         [16]  550 	ld	a, (#_hero_x)
    0000028A C6 08            [ 8]  551 	add	a, #0x08
    0000028C 4F               [ 4]  552 	ld	c, a
                                    553 ;c:\gbdk\include\gb\gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    0000028D 21r0Cr00         [12]  554 	ld	hl, #(_shadow_OAM + 12)
                                    555 ;c:\gbdk\include\gb\gb.h:1962: itm->y=y, itm->x=x;
    00000290 78               [ 4]  556 	ld	a, b
    00000291 22               [ 8]  557 	ld	(hl+), a
    00000292 71               [ 8]  558 	ld	(hl), c
                                    559 ;main.c:151: SHOW_SPRITES;
    00000293 F0r00            [12]  560 	ldh	a, (_LCDC_REG + 0)
    00000295 F6 02            [ 8]  561 	or	a, #0x02
    00000297 E0r00            [12]  562 	ldh	(_LCDC_REG + 0), a
                                    563 ;main.c:154: while(1) {
    00000299                        564 00102$:
                                    565 ;main.c:156: update_enemy_sprite(); // Déplace et anime l'ennemi
    00000299 CDr00r00         [24]  566 	call	_update_enemy_sprite
                                    567 ;main.c:159: update_hero_sprite(); // Déplace et anime le héros
    0000029C CDr0Dr01         [24]  568 	call	_update_hero_sprite
                                    569 ;main.c:161: delay(100); // Délai pour l'animation globale
    0000029F 11 64 00         [12]  570 	ld	de, #0x0064
    000002A2 CDr00r00         [24]  571 	call	_delay
                                    572 ;main.c:163: }
    000002A5 18 F2            [12]  573 	jr	00102$
                                    574 	.area _CODE
                                    575 	.area _INITIALIZER
    00000000                        576 __xinit__hero:
    00000000 08                     577 	.db #0x08	; 8
    00000001 08                     578 	.db #0x08	; 8
    00000002 0C                     579 	.db #0x0c	; 12
    00000003 0C                     580 	.db #0x0c	; 12
    00000004 0B                     581 	.db #0x0b	; 11
    00000005 0F                     582 	.db #0x0f	; 15
    00000006 08                     583 	.db #0x08	; 8
    00000007 0F                     584 	.db #0x0f	; 15
    00000008 16                     585 	.db #0x16	; 22
    00000009 1F                     586 	.db #0x1f	; 31
    0000000A 14                     587 	.db #0x14	; 20
    0000000B 1F                     588 	.db #0x1f	; 31
    0000000C 16                     589 	.db #0x16	; 22
    0000000D 1F                     590 	.db #0x1f	; 31
    0000000E 10                     591 	.db #0x10	; 16
    0000000F 10                     592 	.db #0x10	; 16
    00000010 08                     593 	.db #0x08	; 8
    00000011 08                     594 	.db #0x08	; 8
    00000012 18                     595 	.db #0x18	; 24
    00000013 18                     596 	.db #0x18	; 24
    00000014 E8                     597 	.db #0xe8	; 232
    00000015 F8                     598 	.db #0xf8	; 248
    00000016 08                     599 	.db #0x08	; 8
    00000017 F8                     600 	.db #0xf8	; 248
    00000018 34                     601 	.db #0x34	; 52	'4'
    00000019 FC                     602 	.db #0xfc	; 252
    0000001A 24                     603 	.db #0x24	; 36
    0000001B FC                     604 	.db #0xfc	; 252
    0000001C B4                     605 	.db #0xb4	; 180
    0000001D FC                     606 	.db #0xfc	; 252
    0000001E 04                     607 	.db #0x04	; 4
    0000001F 04                     608 	.db #0x04	; 4
    00000020 1E                     609 	.db #0x1e	; 30
    00000021 1E                     610 	.db #0x1e	; 30
    00000022 D7                     611 	.db #0xd7	; 215
    00000023 D7                     612 	.db #0xd7	; 215
    00000024 AE                     613 	.db #0xae	; 174
    00000025 BE                     614 	.db #0xbe	; 190
    00000026 92                     615 	.db #0x92	; 146
    00000027 BE                     616 	.db #0xbe	; 190
    00000028 92                     617 	.db #0x92	; 146
    00000029 BE                     618 	.db #0xbe	; 190
    0000002A 4F                     619 	.db #0x4f	; 79	'O'
    0000002B 7F                     620 	.db #0x7f	; 127
    0000002C 29                     621 	.db #0x29	; 41
    0000002D 3F                     622 	.db #0x3f	; 63
    0000002E 1F                     623 	.db #0x1f	; 31
    0000002F 1F                     624 	.db #0x1f	; 31
    00000030 BC                     625 	.db #0xbc	; 188
    00000031 BC                     626 	.db #0xbc	; 188
    00000032 70                     627 	.db #0x70	; 112	'p'
    00000033 70                     628 	.db #0x70	; 112	'p'
    00000034 38                     629 	.db #0x38	; 56	'8'
    00000035 38                     630 	.db #0x38	; 56	'8'
    00000036 24                     631 	.db #0x24	; 36
    00000037 3C                     632 	.db #0x3c	; 60
    00000038 24                     633 	.db #0x24	; 36
    00000039 3C                     634 	.db #0x3c	; 60
    0000003A 78                     635 	.db #0x78	; 120	'x'
    0000003B 78                     636 	.db #0x78	; 120	'x'
    0000003C C8                     637 	.db #0xc8	; 200
    0000003D F8                     638 	.db #0xf8	; 248
    0000003E F8                     639 	.db #0xf8	; 248
    0000003F F8                     640 	.db #0xf8	; 248
    00000040                        641 __xinit__hero2:
    00000040 08                     642 	.db #0x08	; 8
    00000041 08                     643 	.db #0x08	; 8
    00000042 0C                     644 	.db #0x0c	; 12
    00000043 0C                     645 	.db #0x0c	; 12
    00000044 0B                     646 	.db #0x0b	; 11
    00000045 0F                     647 	.db #0x0f	; 15
    00000046 08                     648 	.db #0x08	; 8
    00000047 0F                     649 	.db #0x0f	; 15
    00000048 16                     650 	.db #0x16	; 22
    00000049 1F                     651 	.db #0x1f	; 31
    0000004A 14                     652 	.db #0x14	; 20
    0000004B 1F                     653 	.db #0x1f	; 31
    0000004C 16                     654 	.db #0x16	; 22
    0000004D 1F                     655 	.db #0x1f	; 31
    0000004E 10                     656 	.db #0x10	; 16
    0000004F 10                     657 	.db #0x10	; 16
    00000050 08                     658 	.db #0x08	; 8
    00000051 08                     659 	.db #0x08	; 8
    00000052 18                     660 	.db #0x18	; 24
    00000053 18                     661 	.db #0x18	; 24
    00000054 E8                     662 	.db #0xe8	; 232
    00000055 F8                     663 	.db #0xf8	; 248
    00000056 08                     664 	.db #0x08	; 8
    00000057 F8                     665 	.db #0xf8	; 248
    00000058 34                     666 	.db #0x34	; 52	'4'
    00000059 FC                     667 	.db #0xfc	; 252
    0000005A 24                     668 	.db #0x24	; 36
    0000005B FC                     669 	.db #0xfc	; 252
    0000005C B4                     670 	.db #0xb4	; 180
    0000005D FC                     671 	.db #0xfc	; 252
    0000005E 04                     672 	.db #0x04	; 4
    0000005F 04                     673 	.db #0x04	; 4
    00000060 1E                     674 	.db #0x1e	; 30
    00000061 1E                     675 	.db #0x1e	; 30
    00000062 2F                     676 	.db #0x2f	; 47
    00000063 2F                     677 	.db #0x2f	; 47
    00000064 4E                     678 	.db #0x4e	; 78	'N'
    00000065 4E                     679 	.db #0x4e	; 78	'N'
    00000066 52                     680 	.db #0x52	; 82	'R'
    00000067 7E                     681 	.db #0x7e	; 126
    00000068 52                     682 	.db #0x52	; 82	'R'
    00000069 7E                     683 	.db #0x7e	; 126
    0000006A 4F                     684 	.db #0x4f	; 79	'O'
    0000006B 7F                     685 	.db #0x7f	; 127
    0000006C 29                     686 	.db #0x29	; 41
    0000006D 3F                     687 	.db #0x3f	; 63
    0000006E 1F                     688 	.db #0x1f	; 31
    0000006F 1F                     689 	.db #0x1f	; 31
    00000070 BC                     690 	.db #0xbc	; 188
    00000071 BC                     691 	.db #0xbc	; 188
    00000072 70                     692 	.db #0x70	; 112	'p'
    00000073 70                     693 	.db #0x70	; 112	'p'
    00000074 38                     694 	.db #0x38	; 56	'8'
    00000075 38                     695 	.db #0x38	; 56	'8'
    00000076 24                     696 	.db #0x24	; 36
    00000077 3C                     697 	.db #0x3c	; 60
    00000078 24                     698 	.db #0x24	; 36
    00000079 3C                     699 	.db #0x3c	; 60
    0000007A 78                     700 	.db #0x78	; 120	'x'
    0000007B 78                     701 	.db #0x78	; 120	'x'
    0000007C C8                     702 	.db #0xc8	; 200
    0000007D F8                     703 	.db #0xf8	; 248
    0000007E F8                     704 	.db #0xf8	; 248
    0000007F F8                     705 	.db #0xf8	; 248
    00000080                        706 __xinit__enemy:
    00000080 1E                     707 	.db #0x1e	; 30
    00000081 1E                     708 	.db #0x1e	; 30
    00000082 7F                     709 	.db #0x7f	; 127
    00000083 7F                     710 	.db #0x7f	; 127
    00000084 FF                     711 	.db #0xff	; 255
    00000085 FF                     712 	.db #0xff	; 255
    00000086 CF                     713 	.db #0xcf	; 207
    00000087 FF                     714 	.db #0xff	; 255
    00000088 CC                     715 	.db #0xcc	; 204
    00000089 FF                     716 	.db #0xff	; 255
    0000008A FF                     717 	.db #0xff	; 255
    0000008B FF                     718 	.db #0xff	; 255
    0000008C F3                     719 	.db #0xf3	; 243
    0000008D FF                     720 	.db #0xff	; 255
    0000008E F3                     721 	.db #0xf3	; 243
    0000008F FF                     722 	.db #0xff	; 255
    00000090 00                     723 	.db #0x00	; 0
    00000091 00                     724 	.db #0x00	; 0
    00000092 80                     725 	.db #0x80	; 128
    00000093 80                     726 	.db #0x80	; 128
    00000094 C0                     727 	.db #0xc0	; 192
    00000095 C0                     728 	.db #0xc0	; 192
    00000096 C0                     729 	.db #0xc0	; 192
    00000097 C0                     730 	.db #0xc0	; 192
    00000098 C0                     731 	.db #0xc0	; 192
    00000099 C0                     732 	.db #0xc0	; 192
    0000009A C0                     733 	.db #0xc0	; 192
    0000009B C0                     734 	.db #0xc0	; 192
    0000009C C0                     735 	.db #0xc0	; 192
    0000009D C0                     736 	.db #0xc0	; 192
    0000009E C0                     737 	.db #0xc0	; 192
    0000009F C0                     738 	.db #0xc0	; 192
    000000A0 7F                     739 	.db #0x7f	; 127
    000000A1 7F                     740 	.db #0x7f	; 127
    000000A2 7F                     741 	.db #0x7f	; 127
    000000A3 7F                     742 	.db #0x7f	; 127
    000000A4 9F                     743 	.db #0x9f	; 159
    000000A5 9F                     744 	.db #0x9f	; 159
    000000A6 9E                     745 	.db #0x9e	; 158
    000000A7 9E                     746 	.db #0x9e	; 158
    000000A8 7E                     747 	.db #0x7e	; 126
    000000A9 7E                     748 	.db #0x7e	; 126
    000000AA 1F                     749 	.db #0x1f	; 31
    000000AB 1F                     750 	.db #0x1f	; 31
    000000AC 12                     751 	.db #0x12	; 18
    000000AD 12                     752 	.db #0x12	; 18
    000000AE 12                     753 	.db #0x12	; 18
    000000AF 12                     754 	.db #0x12	; 18
    000000B0 80                     755 	.db #0x80	; 128
    000000B1 80                     756 	.db #0x80	; 128
    000000B2 00                     757 	.db #0x00	; 0
    000000B3 00                     758 	.db #0x00	; 0
    000000B4 C0                     759 	.db #0xc0	; 192
    000000B5 C0                     760 	.db #0xc0	; 192
    000000B6 40                     761 	.db #0x40	; 64
    000000B7 40                     762 	.db #0x40	; 64
    000000B8 40                     763 	.db #0x40	; 64
    000000B9 40                     764 	.db #0x40	; 64
    000000BA 80                     765 	.db #0x80	; 128
    000000BB 80                     766 	.db #0x80	; 128
    000000BC 00                     767 	.db #0x00	; 0
    000000BD 00                     768 	.db #0x00	; 0
    000000BE 00                     769 	.db #0x00	; 0
    000000BF 00                     770 	.db #0x00	; 0
    000000C0                        771 __xinit__enemy2:
    000000C0 1E                     772 	.db #0x1e	; 30
    000000C1 1E                     773 	.db #0x1e	; 30
    000000C2 7F                     774 	.db #0x7f	; 127
    000000C3 7F                     775 	.db #0x7f	; 127
    000000C4 C9                     776 	.db #0xc9	; 201
    000000C5 C9                     777 	.db #0xc9	; 201
    000000C6 88                     778 	.db #0x88	; 136
    000000C7 88                     779 	.db #0x88	; 136
    000000C8 C8                     780 	.db #0xc8	; 200
    000000C9 C8                     781 	.db #0xc8	; 200
    000000CA FF                     782 	.db #0xff	; 255
    000000CB FF                     783 	.db #0xff	; 255
    000000CC C0                     784 	.db #0xc0	; 192
    000000CD C0                     785 	.db #0xc0	; 192
    000000CE E1                     786 	.db #0xe1	; 225
    000000CF E1                     787 	.db #0xe1	; 225
    000000D0 00                     788 	.db #0x00	; 0
    000000D1 00                     789 	.db #0x00	; 0
    000000D2 80                     790 	.db #0x80	; 128
    000000D3 80                     791 	.db #0x80	; 128
    000000D4 C0                     792 	.db #0xc0	; 192
    000000D5 C0                     793 	.db #0xc0	; 192
    000000D6 C0                     794 	.db #0xc0	; 192
    000000D7 C0                     795 	.db #0xc0	; 192
    000000D8 C0                     796 	.db #0xc0	; 192
    000000D9 C0                     797 	.db #0xc0	; 192
    000000DA C0                     798 	.db #0xc0	; 192
    000000DB C0                     799 	.db #0xc0	; 192
    000000DC C0                     800 	.db #0xc0	; 192
    000000DD C0                     801 	.db #0xc0	; 192
    000000DE C0                     802 	.db #0xc0	; 192
    000000DF C0                     803 	.db #0xc0	; 192
    000000E0 7F                     804 	.db #0x7f	; 127
    000000E1 7F                     805 	.db #0x7f	; 127
    000000E2 7F                     806 	.db #0x7f	; 127
    000000E3 7F                     807 	.db #0x7f	; 127
    000000E4 9F                     808 	.db #0x9f	; 159
    000000E5 9F                     809 	.db #0x9f	; 159
    000000E6 9E                     810 	.db #0x9e	; 158
    000000E7 9E                     811 	.db #0x9e	; 158
    000000E8 7E                     812 	.db #0x7e	; 126
    000000E9 7E                     813 	.db #0x7e	; 126
    000000EA 1F                     814 	.db #0x1f	; 31
    000000EB 1F                     815 	.db #0x1f	; 31
    000000EC 12                     816 	.db #0x12	; 18
    000000ED 12                     817 	.db #0x12	; 18
    000000EE 12                     818 	.db #0x12	; 18
    000000EF 12                     819 	.db #0x12	; 18
    000000F0 80                     820 	.db #0x80	; 128
    000000F1 80                     821 	.db #0x80	; 128
    000000F2 00                     822 	.db #0x00	; 0
    000000F3 00                     823 	.db #0x00	; 0
    000000F4 C0                     824 	.db #0xc0	; 192
    000000F5 C0                     825 	.db #0xc0	; 192
    000000F6 40                     826 	.db #0x40	; 64
    000000F7 40                     827 	.db #0x40	; 64
    000000F8 40                     828 	.db #0x40	; 64
    000000F9 40                     829 	.db #0x40	; 64
    000000FA 80                     830 	.db #0x80	; 128
    000000FB 80                     831 	.db #0x80	; 128
    000000FC 00                     832 	.db #0x00	; 0
    000000FD 00                     833 	.db #0x00	; 0
    000000FE 00                     834 	.db #0x00	; 0
    000000FF 00                     835 	.db #0x00	; 0
    00000100                        836 __xinit__enemy_x:
    00000100 78                     837 	.db #0x78	; 120	'x'
    00000101                        838 __xinit__enemy_y:
    00000101 4E                     839 	.db #0x4e	; 78	'N'
    00000102                        840 __xinit__enemySpriteIndex:
    00000102 00                     841 	.db #0x00	; 0
    00000103                        842 __xinit__enemySpeed:
    00000103 01                     843 	.db #0x01	; 1
    00000104                        844 __xinit__enemyAnimationCounter:
    00000104 00                     845 	.db #0x00	; 0
    00000105                        846 __xinit__hero_x:
    00000105 58                     847 	.db #0x58	; 88	'X'
    00000106                        848 __xinit__hero_y:
    00000106 4E                     849 	.db #0x4e	; 78	'N'
    00000107                        850 __xinit__heroSpriteIndex:
    00000107 00                     851 	.db #0x00	; 0
                                    852 	.area _CABS (ABS)
